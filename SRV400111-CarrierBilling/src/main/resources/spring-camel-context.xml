<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://camel.apache.org/schema/spring 
	http://camel.apache.org/schema/spring/camel-spring.xsd">
	<camelContext
	    id="camelContext-0423f187-258d-455e-82e8-783bcda7f4af"
		xmlns="http://camel.apache.org/schema/spring">
		<!--Cargamos el archivo de propiedades correspondiente al ambiente NOTA: 
			esto debe ser descomentado para subir a openshift, se debe eliminar el espacio 
			entre "$ {" y comentar o eliminar la linea donde se encuentra en duro el 
			archivo properties. Por defecto en opensfhit es develop -->
		<!--<propertyPlaceholder id="placeholder" location="classpath:$ {env:PFX_ENV}.properties"/> -->
		
		<propertyPlaceholder id="placeholder"
			location="classpath:application.properties" />
			
		<onException>
			<exception>cl.wom.exception.services.ServiceError</exception>
			<handled>
				<constant>true</constant>
			</handled>
			<log loggingLevel="ERROR" message="errorr" />
			<setHeader headerName="Exchange.HTTP_RESPONSE_CODE">
				<simple>${exception.codigoError}</simple>
			</setHeader>
			<setHeader headerName="messageError"><simple>Bad Request - ${exception.message}</simple></setHeader>
			<to uri="velocity:velocity/400.vm" />
		</onException>

		<!-- getcarrierbillingelegibilitycheck -->
		<route streamCache="true">
			<from
				uri="restlet:http://localhost:8880/getcarrierbillingelegibilitycheck/rest/v1.0/?restletMethod=post" />
			<setHeader headerName="Accept">
				<constant>application/json</constant>
			</setHeader>
			<setHeader headerName="Content-Type">
				<constant>application/json</constant>
			</setHeader>
			<setHeader headerName="requestId">
				<jsonpath>$.requestId</jsonpath>
			</setHeader>
			<setHeader headerName="userId">
				<jsonpath>$.userId</jsonpath>
			</setHeader>
			<setHeader headerName="userIdType">
				<jsonpath>$.userIdType</jsonpath>
			</setHeader>
			<setHeader headerName="key1">
				<jsonpath>$.extensionData.key1</jsonpath>
			</setHeader>
			<setHeader headerName="key2">
				<jsonpath>$.extensionData.key2</jsonpath>
			</setHeader>

			<choice>
				<when>
					<simple>
						${headers.requestId} == "" || 
						${headers.userId} == "" || 
						${headers.userIdType} == "" ||
						${headers.key1} == "" || 
						${headers.key2} == ""
					</simple>
					<throwException exceptionType="cl.wom.exception.services.ServiceError"
						message="400" />
				</when>
				<otherwise>
					<to uri="velocity:velocity/200GetCarrierBillingElegibilityCheck.vm" />
				</otherwise>
			</choice>
		</route>



		<!-- getcarrierbillingoffers -->
		<route streamCache="true">
			<from
				uri="restlet:http://0.0.0.0:8881/srv40062/getcarrierbillingoffers/rest/v1.0/?restletMethod=post" />
			<setHeader headerName="Accept">
				<constant>application/json</constant>
			</setHeader>
			<setHeader headerName="Content-Type">
				<constant>application/json</constant>
			</setHeader>
			<setHeader headerName="credential">
				<jsonpath>$.credential</jsonpath>
			</setHeader>
			<setHeader headerName="credentialType">
				<jsonpath>$.credentialType</jsonpath>
			</setHeader>
			<setHeader headerName="channel">
				<jsonpath>$.channel</jsonpath>
			</setHeader>
			<setHeader headerName="networkKey">
				<jsonpath>$.networkKey</jsonpath>
			</setHeader>
			<choice>
				<when>
					<simple>
						${headers.credential} == "" ||
						${headers.credentialType} == "" ||
						${headers.channel} == "" ||
						${headers.networkKey} == ""
					</simple>
					<throwException exceptionType="cl.wom.exception.services.ServiceError"
						message="400" />
				</when>
				<otherwise>
					<to uri="velocity:velocity/200GetCarrierBillingOffers.vm" />
				</otherwise>
			</choice>
		</route>
		
		<!-- subscribecarrierbillingoffer -->
		<route streamCache="true">
			<from
				uri="restlet:http://localhost:8882/subscribecarrierbillingoffer/rest/v1.0/?restletMethod=post" />
			<setHeader headerName="Accept">
				<constant>application/json</constant>
			</setHeader>
			<setHeader headerName="Content-Type">
				<constant>application/json</constant>
			</setHeader>
			<setHeader headerName="credential">
				<jsonpath>$.credential</jsonpath>
			</setHeader>
			<setHeader headerName="credentialType">
				<jsonpath>$.credentialType</jsonpath>
			</setHeader>
			<setHeader headerName="channel">
				<jsonpath>$.channel</jsonpath>
			</setHeader>
			<setHeader headerName="networkKey">
				<jsonpath>$.networkKey</jsonpath>
			</setHeader>
			<choice>
				<when>
					<simple>
						${headers.credential} == "" ||
						${headers.credentialType} == "" ||
						${headers.channel} == "" ||
						${headers.networkKey} == ""
					</simple>
					<throwException exceptionType="cl.wom.exception.services.ServiceError"
						message="400" />
				</when>
				<otherwise>
					<to uri="velocity:velocity/200SubscribeCarrierBillingOffers.vm" />
				</otherwise>
			</choice>
		</route>
		
		<!-- applycarrierbillingcharge -->
		<route streamCache="true">
			<from
				uri="restlet:http://localhost:8883/applycarrierbillingcharge/rest/v1.0/?restletMethod=post" />
			<setHeader headerName="Accept">
				<constant>application/json</constant>
			</setHeader>
			<setHeader headerName="Content-Type">
				<constant>application/json</constant>
			</setHeader>
			<setHeader headerName="requestId">
				<jsonpath>$.requestId</jsonpath>
			</setHeader>
			<setHeader headerName="bangoTransactionId">
				<jsonpath>$.bangoTransactionId</jsonpath>
			</setHeader>
			<setHeader headerName="merchantTransactionId">
				<jsonpath>$.merchantTransactionId</jsonpath>
			</setHeader>
			<setHeader headerName="paymentProviderTransactionId">
				<jsonpath>$.paymentProviderTransactionId</jsonpath>
			</setHeader>
			<setHeader headerName="userId">
				<jsonpath>$.userId</jsonpath>
			</setHeader>
			<setHeader headerName="amount">
				<jsonpath>$.amount</jsonpath>
			</setHeader>
			<setHeader headerName="currency">
				<jsonpath>$.currency</jsonpath>
			</setHeader>
			<choice>
				<when>
					<simple>
						${headers.requestId} == "" ||
						${headers.bangoTransactionId} == "" ||
						${headers.merchantTransactionId} == "" ||
						${headers.paymentProviderTransactionId} == "" ||
						${headers.userId} == "" ||
						${headers.amount} == "" ||
						${headers.currency} == ""
					</simple>
					<throwException exceptionType="cl.wom.exception.services.ServiceError"
						message="400" />
				</when>
				<otherwise>
					<to uri="velocity:velocity/200ApplyCarrierBillingCharge.vm" />
				</otherwise>
			</choice>
		</route>
		
		<!-- Servicio getCarrierBillingPurchaseHistory -->
		<route streamCache="true">
			<from
				uri="restlet:http://localhost:8884/getCarrierBillingPurchaseHistory/rest/v1.0/?restletMethod=post" />
			<setHeader headerName="Accept">
				<constant>application/json</constant>
			</setHeader>
			<setHeader headerName="Content-Type">
				<constant>application/json</constant>
			</setHeader>
			<setHeader headerName="msisdn">
				<jsonpath>$.msisdn</jsonpath>
			</setHeader>
			<setHeader headerName="fecha_desde">
				<jsonpath>$.fecha_desde</jsonpath>
			</setHeader>
			<setHeader headerName="fecha_hasta">
				<jsonpath>$.fecha_hasta</jsonpath>
			</setHeader>

			<choice>
				<when>
					<simple>
						${headers.msisdn} == "" ||
						${headers.fecha_desde} == "" ||
						${headers.fecha_hasta} == ""
					</simple>
					<throwException exceptionType="cl.wom.exception.services.ServiceError"
						message="400" />
				</when>
				<otherwise>
					<to uri="velocity:velocity/200GetCarrierBillingPurchaseHistory.vm" />
				</otherwise>
			</choice>
		</route>

	</camelContext>
</beans>