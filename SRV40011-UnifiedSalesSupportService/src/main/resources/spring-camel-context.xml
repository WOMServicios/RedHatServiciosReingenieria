<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:cxf="http://camel.apache.org/schema/cxf"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd         http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd          http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd">
    <!-- Proyecto apache camel que permite realizar un proxy entre servicios 
		del tipo SOAP -->
    <camelContext id="s03-proxy" xmlns="http://camel.apache.org/schema/spring">
        <!-- Cargamos el archivo de propiedades correspondiente al ambiente NOTA: 
			esto debe ser descomentado para subir a openshift, se debe eliminar el espacio 
			entre "$ {" y comentar o eliminar la linea donde se encuentra en duro el 
			archivo properties. Por defecto en opensfhit es develop -->
<!--         <propertyPlaceholder id="placeholder" location="classpath:$ {env:PFX_ENV}.properties"/> -->
        <propertyPlaceholder id="placeholder" location="classpath:application.properties"/>
        <onException>
            <exception>java.lang.Exception</exception>
            <redeliveryPolicy
                maximumRedeliveries="{{camel.timeout.max-delivery}}" redeliveryDelay="{{camel.timeout.redelivery-delay}}"/>
        </onException>

        <!-- Ruta camel que expone un servicio SOAP basado en una publicación del 
			mismo tipo -->
        <route streamCache="true">
            
            <from uri="cxf:http://0.0.0.0:8888/salesSupport/uss?wsdlURL=classpath:wsdl/definition.wsdl&amp;serviceName={http://www.webserviceX.NET}GlobalWeather&amp;portName={http://www.webserviceX.NET}GlobalWeatherSoap&amp;dataFormat=MESSAGE"/>
           <!--  <to uri="cxf:http://{{soap.service.host}}:{{soap.service.port}}{{soap.service.resource}}?dataFormat=MESSAGE"/> -->
            <log loggingLevel="INFO" message="pasando por servicio proxy"/>
            
            <!-- TODO: invocar registraTX() "Inicio de Activación en RED" sentencia SQL Base Operaciones -->
            <!-- TODO: Procesar condicion de retorno de la base de operaciones -->
            <!-- TODO: invocar activateVoLTENetwork(msisdn,imsi)TELNET en el Gateway SPG (Gateway Service Provider Gateway)-->
            <!-- TODO: Procesar condicion de retorno del Gateway SPG-->
            <!-- TODO: invocar registraTX() "Termino de Activación en RED" sentencia SQL Base Operaciones -->
            <!-- TODO: Procesar condicion de retorno de la base de operaciones -->
            <!-- TODO: invoca resgistraTx() "Inicio de registro en el BSCS (Business Support & Control System)" sentencia SQL en la Base Operaciones-->
            <!-- TODO: invoca activateVoLTEBSCS(msisdn) sentencia PL/SQL base de datos BSCS-->
            <!-- TODO: Procesar condicion de retorno de la base de datos BSCS -->
			<!-- TODO: invoca registraTx() "Termino REgistro en BSCS" en Base Operaciones -->
			<!-- TODO: Procesar condicion de retorno de la base de operaciones -->            
        </route>
    </camelContext>
</beans>
