<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:cxf="http://camel.apache.org/schema/cxf" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd         
    http://camel.apache.org/schema/spring 
    http://camel.apache.org/schema/spring/camel-spring.xsd          
    http://camel.apache.org/schema/cxf 
    http://camel.apache.org/schema/cxf/camel-cxf.xsd">

	<!-- this is the JDBC data source which uses a MySQL database -->
	<bean class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" id="dataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/ws_prueba" />
		<property name="username" value="root" />
		<property name="password" value="asdqwe123" />
	</bean>

	<!-- configure the Camel SQL component to use the JDBC data source -->
	<bean class="org.apache.camel.component.sql.SqlComponent" id="sql">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- Proyecto apache camel que permite realizar un proxy entre servicios 
		del tipo SOAP -->

	<camelContext id="s03-proxy" xmlns="http://camel.apache.org/schema/spring"
		xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ws="http://ws.webservices.pos.nextel.cl.com">
		<!-- Cargamos el archivo de propiedades correspondiente al ambiente NOTA: 
			esto debe ser descomentado para subir a openshift, se debe eliminar el espacio 
			entre "$ {" y comentar o eliminar la linea donde se encuentra en duro el 
			archivo properties. Por defecto en opensfhit es develop -->
		<!-- <propertyPlaceholder id="placeholder" location="classpath:$ {env:PFX_ENV}.properties"/> -->
		<propertyPlaceholder id="placeholder"
			location="classpath:application.properties" />

		<onException>
			<exception>java.lang.Exception</exception>
			<redeliveryPolicy maximumRedeliveries="{{camel.timeout.max-delivery}}"
				redeliveryDelay="{{camel.timeout.redelivery-delay}}" />
		</onException>


		<route streamCache="true">
			<from uri="cxf:http://localhost:8888/activateVoLTENetwork/?wsdlURL=classpath:wsdl/AutoProvisionVoLTE.wsdl&amp;serviceName={http://ws.webservices.pos.nextel.cl.com}AutoProvisionVoLTE&amp;portName={http://ws.webservices.pos.nextel.cl.com}AutoProvisionVoLTESOAP&amp;dataFormat=MESSAGE" />
	
	
			<to uri="sql-stored:registerTx_in()?dataSource=dataSource" />	
	


 			
			<to uri="cxf:http://localhost:8889/activateVoLTENetwork/?dataFormat=MESSAGE" />



			<setHeader headerName="resultCode">
				<xpath resultType="java.lang.Integer">/soapenv:Envelope/soapenv:Body/Result/ResultCode/text()
				</xpath>
			</setHeader>

			<choice>
				<when>
					<simple>${headers.resultCode} != 1</simple>
					<log
						message="aqui se debe implementar el otro TO al servicio o lo que corresponda" />
					<transform>
						<simple>respuesta NO OK</simple>
					</transform>
				</when>
				<otherwise>
					<transform>
						<simple>OK</simple>
					</transform>
				</otherwise>
			</choice>

		</route>


		<route streamCache="true">
			<from
				uri="cxf:http://localhost:8889/activateVoLTENetwork/?wsdlURL=classpath:wsdl/AutoProvisionVoLTE.wsdl&amp;serviceName={http://ws.webservices.pos.nextel.cl.com}AutoProvisionVoLTE&amp;portName={http://ws.webservices.pos.nextel.cl.com}AutoProvisionVoLTESOAP&amp;dataFormat=MESSAGE" />

			<to uri="sql-stored:registerTx_out(INTEGER 3)?dataSource=dataSource" />

			<to uri="velocity:velocity/activateVoLTENetworkResponse.vm" /> 

		</route>

	</camelContext>
</beans>