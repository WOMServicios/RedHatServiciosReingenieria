#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:cxf="http://camel.apache.org/schema/cxf"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd         http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd          http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd">
    <bean class="cl.wom.middleware.proxy.Sleep" id="sleepTimeOut"/>
    <bean
        class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" id="connectionFactory">
        <property name="password" value="${redisPassword}"/>
    </bean>
    <bean
        class="org.springframework.data.redis.serializer.StringRedisSerializer" id="stringSerializer"/>
    <bean class="org.springframework.data.redis.core.RedisTemplate" id="redisTemplate">
        <property name="defaultSerializer" ref="stringSerializer"/>
        <property name="connectionFactory" ref="connectionFactory"/>
    </bean>
    <camelContext id="camelContext-fb87e413-3eac-463f-8c54-4ff75b7ba052" xmlns="http://camel.apache.org/schema/spring">
        <propertyPlaceholder id="placeholder" location="classpath:application.properties"/>
        <onException>
            <exception>java.lang.Exception</exception>
            <redeliveryPolicy
                maximumRedeliveries="{{camel.timeout.max-delivery}}" redeliveryDelay="{{camel.timeout.redelivery-delay}}"/>
        </onException>
        <route id="_route5">
            <from id="_from4" uri="timer://foo?repeatCount=1"/>
            <log id="_log5" loggingLevel="INFO" message="PROPERTIE DE AMBIENTE: {{env:PFX_ENV}}"/>
            <log id="_log6" loggingLevel="INFO" message="NIVEL DE LOG: {{env:LOGLEVEL}}"/>
        </route>
        <route id="restRouteRedis" streamCache="true">
            <from id="_from1" uri="restlet:http://0.0.0.0:${restPort}/${restContext}?restletMethods=get"/>
            <to id="_to1" uri="direct:directGetRedis"/>
        </route>
        <route id="getRedisRoute" streamCache="true">
            <from id="_from2" uri="direct:directGetRedis"/>
            <setHeader headerName="CamelRedis.Key" id="_setHeader3">
                <simple>${symbol_dollar}{headers.keyID}</simple>
            </setHeader>
            <to id="_to2" uri="spring-redis://${redisHost}:${redisPort}?connectionFactory=${symbol_pound}connectionFactory&amp;serializer=${symbol_pound}stringSerializer&amp;redisTemplate=${symbol_pound}redisTemplate&amp;command=GET"/>
            <choice id="_choice1">
                <when id="_when1">
                    <simple>${symbol_dollar}{body} != null</simple>
                </when>
                <otherwise id="_otherwise1">
                    <to id="_to3" uri="restlet:http://0.0.0.0:8889/servicioTest/?restletMethods=get"/>
                    <setHeader headerName="CamelRedis.Key" id="_setHeader1">
                        <simple>${symbol_dollar}{headers.keyID}</simple>
                    </setHeader>
                    <setHeader headerName="CamelRedis.Value" id="_setHeader2">
                        <simple>${symbol_dollar}{body}</simple>
                    </setHeader>
                    <to id="_to4" uri="spring-redis://${redisHost}:${redisPort}?connectionFactory=${symbol_pound}connectionFactory&amp;serializer=${symbol_pound}stringSerializer&amp;redisTemplate=${symbol_pound}redisTemplate"/>
                </otherwise>
            </choice>
        </route>
        <route id="testServiceRoute" streamCache="true">
            <from id="_from3" uri="restlet:http://0.0.0.0:8889/servicioTest/?restletMethods=get"/>
            <setBody id="_setBody1">
                <simple>setValue!!</simple>
            </setBody>
            <log id="_log3" message="${symbol_dollar}{body}"/>
        </route>
    </camelContext>
</beans>
