<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  http://camel.apache.org/schema/spring   http://camel.apache.org/schema/spring/camel-spring.xsd">

	<bean class="cl.wom.util.ClienteProcessor" id="clienteProcessor" />
	<camelContext
		id="camelContext-0423f187-258d-455e-82e8-783bcda7f4af"
		xmlns="http://camel.apache.org/schema/spring">
		<!--Cargamos el archivo de propiedades correspondiente al ambiente NOTA: 
			esto debe ser descomentado para subir a openshift, se debe eliminar el espacio 
			entre "$ {" y comentar o eliminar la linea donde se encuentra en duro el 
			archivo properties. Por defecto en opensfhit es develop -->
			 
			 <propertyPlaceholder id="placeholder"
                location="file:${env:APP_ENV}, classpath:sql.properties"/>
			 			
		<onException>
			<exception>cl.wom.exception.services.ServiceError</exception>
			<handled>
				<constant>true</constant>
			</handled>
			<setHeader headerName="Exchange.HTTP_RESPONSE_CODE">
				<simple>${exception.codigoError}</simple>
			</setHeader>
			<setHeader headerName="codigoError">
				<simple>${exception.codigoError}</simple>
			</setHeader>
			<setHeader headerName="messageError">
				<simple>${exception.message}</simple>
			</setHeader>
			<setHeader headerName="Content-Type">
				<constant>application/json</constant>
			</setHeader>
			<to uri="velocity:velocity/ErrorHttp.vm" />
		</onException>
		<!-- getcarrierbillingoffers -->
		<route  streamCache="true">
			<from 
				uri="restlet:http://{{service.rest.host}}:{{service.rest.port}}{{service.rest.resource}}?restletMethod=post" />
			<doTry>
				<setHeader headerName="credential" id="_setHeader3">
					<jsonpath>$.credential</jsonpath>
				</setHeader>
				<setHeader headerName="credentialType" id="_setHeader4">
					<jsonpath>$.credentialType</jsonpath>
				</setHeader>
				<setHeader headerName="channel" id="_setHeader5">
					<jsonpath>$.channel</jsonpath>
				</setHeader>
				<setHeader headerName="networkKey" id="_setHeader6">
					<jsonpath>$.networkKey</jsonpath>
				</setHeader>
				<doCatch>
				<exception>org.apache.camel.ExpressionEvaluationException
					</exception>
					<setHeader headerName="Exchange.HTTP_RESPONSE_CODE">
						<simple>422</simple>
					</setHeader>
					<to uri="velocity:velocity/422.vm" />
					<setHeader headerName="Content-Type">
						<constant>application/json</constant>
					</setHeader>
					<stop />
				</doCatch>
			</doTry>
			<choice >
				<when >
					<simple>
						${headers.credential} == "" ||
						${headers.credentialType} ==
						"" ||
						${headers.channel} == "" ||
						${headers.networkKey} == ""
					</simple>
					<throwException
						exceptionType="cl.wom.exception.services.ServiceError"
						id="_throwException1" message="400" />
				</when>
				<otherwise>
					<setBody>
						<simple>{{sql.getsubcriberBymsisdn}}</simple>
					</setBody>
					<to uri="bean:clienteProcessor" />
						<to uri="velocity:velocity/netflixStart.vm" />
						<to 
						uri="restlet:http://{{service.rest.bango.host}}:{{service.rest.bango.port}}{{service.rest.bango.resource}}?restletMethod=post" />
				</otherwise>
			</choice>
			<setHeader headerName="Content-Type">
				<constant>application/json; charset=UTF-8</constant>
			</setHeader>
			<setHeader headerName="Encoding">
				<constant>UTF-8</constant>
			</setHeader>	
		</route>
	</camelContext>
</beans>
