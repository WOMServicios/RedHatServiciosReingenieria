<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
    http://camel.apache.org/schema/spring 
    http://camel.apache.org/schema/spring/camel-spring.xsd">
    
    <import resource="bean-definitions.xml"/>
    
    <camelContext  xmlns="http://camel.apache.org/schema/spring">
		<propertyPlaceholder id="placeholder" location="classpath:application.properties"/> 		


        <!-- Control de errores -->
<!-- 		<onException> -->
<!-- 			    <exception>java.lang.Exception</exception> -->
<!-- 			    <handled><simple>true</simple></handled> -->
<!-- 			    <to uri="velocity:velocity/response-sql-error.vm"/> -->

<!-- 			    <log message="error: ${exception.message}"></log> -->
<!-- 			    <setHeader headerName="Content-Type"><constant>application/json</constant></setHeader> -->
<!-- 		</onException> -->
		       
<!--         	TODO: Cambiar nombre del servicio por el propocionado por Arquitectura -->
	<route>
			<from uri="jetty:{{camel.from.endpoint.a}}"/>
			<log message="offerId: ${headers.productOffering.offerId}"></log> 
     
            <choice>
            	<when>
            		<simple>${headers.productOffering.offerId} != null</simple>
<!-- 					<bean ref="sqlFormatterProcessor" method="sqlParserProductOffering"></bean> -->
					<bean ref="getProductCatalog" method="getProductCatalog"></bean>
            	</when>  
            </choice>
            
            
            <setHeader headerName="Content-Type"><constant>application/json</constant></setHeader>
	</route>
    </camelContext>
</beans>