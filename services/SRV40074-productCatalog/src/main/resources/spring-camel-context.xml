<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
    http://camel.apache.org/schema/spring 
    http://camel.apache.org/schema/spring/camel-spring.xsd">
    
    <import resource="bean-definitions.xml"/>
    
    <camelContext
      xmlns="http://camel.apache.org/schema/spring"
      xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
      xmlns:ns="http://ws.wom.cl/wom/neg/productcatalogmanagement/productoffering/v/1">      
      
      
 <propertyPlaceholder id="placeholder" location="file:${env:APP_ENV}"/>

		
	<!-- TODO: IDENTAR CORRECTAMENTE EL CODIGO -->	
	<!-- TODO: LIMPIAR VELOCITIES -->	       
	<route>
		<from uri="jetty:http://{{camel.from.endpointhost}}:{{camel.from.endpointport}}{{camel.from.endpointurl}}"/>
			
		<onException>
			    <exception>java.lang.Exception</exception>
			    <handled><simple>true</simple></handled>
			    
			    <setHeader headerName="errorcode"><constant>500</constant></setHeader>
			    <setHeader headerName="errorMessage"><simple>${exception.message.replaceAll('(\\r|\\n)','').replaceAll('\"','')}</simple></setHeader>
	
			    <log message="error: ${exception.message}"></log>
			    <to uri="velocity:velocity/response-sql-error.vm"/>
			    <setHeader headerName="Content-Type"><constant>application/json</constant></setHeader>
		</onException>
					
			<log message="offerId: ${headers.productOffering.offerId}"></log>
			<choice>
					<when>
						<simple>${headers.productOffering.offerId} == null and ${headers.productOffering.shortDesc} == null and ${headers.productOffering.marketSeg} == null </simple>
					<to uri="velocity:velocity/response-nodata.vm"></to>
					<setHeader headerName="Content-Type"><constant>application/json</constant></setHeader>		
					</when>
					<when>
						<simple>${headers.productOffering.offerId} == "" and ${headers.productOffering.shortDesc} == "" and ${headers.productOffering.marketSeg} == "" </simple>
					<to uri="velocity:velocity/response-nodata.vm"></to>
					<setHeader headerName="Content-Type"><constant>application/json</constant></setHeader>
					</when>
					<when>
						<simple>${headers.productOffering.offerId.toString().length()} > 5 </simple>
						<to uri="velocity:velocity/soap-responselengthofferId.vm"></to>
						<setHeader headerName="Content-Type"><constant>application/json</constant></setHeader>
					</when>
					<when>
						<simple>${headers.productOffering.shortDesc.length()} > 5 </simple>
						<to uri="velocity:velocity/soap-responselengthshortDesc.vm"></to>
						<setHeader headerName="Content-Type"><constant>application/json</constant></setHeader>
					</when>
			 
		     		<otherwise>
					<bean ref="sqlFormatterProcessor" method="sqlParserProductOffering"></bean>
		            
		            <choice>
		            	<when>
		            		<simple>${body} == ""</simple>
		            		<to uri="velocity:velocity/response-sql-nodata.vm"></to>
		            		<setHeader headerName="Content-Type"><constant>application/json</constant></setHeader>	            		
		            	</when>
		            </choice>           
		            <setHeader headerName="Content-Type"><constant>application/json</constant></setHeader>
		            </otherwise>
          </choice>
	</route>
	
	<!-- SERVICIO SOAP -->
	<route>
		<from 
				uri="cxf:http://{{camel.soap.endpointhost}}:{{camel.soap.endpointport}}{{camel.soap.endpointurl}}?
		wsdlURL=classpath:wsdl/productOffering.wsdl&amp;
		serviceName={http://ws.wom.cl/wom/neg/productcatalogmanagement/productoffering/v/1}productOffering&amp;
		portName={http://ws.wom.cl/wom/neg/productcatalogmanagement/productoffering/v/1}productOfferingSOAP&amp;
		dataFormat=MESSAGE" />
		
		<onException>
			    <exception>java.lang.Exception</exception>
			    <handled><simple>true</simple></handled>
			    
			    <setHeader headerName="errorcode"><simple resultType="java.lang.String">500</simple></setHeader>
			    <setHeader headerName="errorMessage"><simple>${exception.message.replaceAll('(\\r|\\n)','').replaceAll('\"','')}</simple></setHeader>
	
			    <log message="error: ${exception.message}"></log>
			    <to uri="velocity:velocity/soap-response-error.vm"/>
		</onException>		
		
		<convertBodyTo type="org.w3c.dom.Document"></convertBodyTo>
	
		<setHeader headerName="offerId">
			<xpath resultType="java.lang.Long">/soapenv:Envelope/soapenv:Body/ns:productOffering/offerId/text()</xpath>
		</setHeader>
		<setHeader headerName="shortDesc">
			<xpath resultType="java.lang.String">/soapenv:Envelope/soapenv:Body/ns:productOffering/shortDesc/text()</xpath>
		</setHeader>
		<log message="offerId: ${headers.offerId}"></log>
		<log message="shortDesc: ${headers.shortDesc}"></log>
		
		<choice>
			<when>
				<simple>${headers.offerId} == null and ${headers.shortDesc.trim()} == "" </simple>
				<to uri="velocity:velocity/response-SOAPnodata.vm"></to>
				<setHeader headerName="Content-Type"><constant>application/xml</constant></setHeader>
			</when>
			<when>
				<simple>${headers.offerId} != null and ${headers.shortDesc.trim()} != "" </simple>
				<to uri="velocity:velocity/response-SOAPdataduplicate.vm"></to>
				<setHeader headerName="Content-Type"><constant>application/xml</constant></setHeader>
			</when>
			<when>
				<simple>${headers.offerId.toString().length()} > 3 </simple>
				<to uri="velocity:velocity/soap-responselengthofferId.vm"></to>
				<setHeader headerName="Content-Type"><constant>application/xml</constant></setHeader>
			</when>
			<when>
				<simple>${headers.shortDesc.length()} > 5 </simple>
				<to uri="velocity:velocity/soap-responselengthshortDesc.vm"></to>
				<setHeader headerName="Content-Type"><constant>application/xml</constant></setHeader>
			</when>
		     		<otherwise>
							<bean ref="sqlFormatterProcessor" method="sqlParserProductOfferingSOAP"></bean>           
				            <choice>
				            	<when>
				            		<simple>${body} == ""</simple>
				            		<log message="Log Body : ${body}"></log>
				            		<to uri="velocity:velocity/soap-response-sqlnodata.vm"></to>
				            		<setHeader headerName="Content-Type"><constant>application/xml</constant></setHeader>	            		
				            	</when> 
				            	<otherwise>
				            		<to uri="velocity:velocity/soap-response-success.vm"></to>           
		            				<setHeader headerName="Content-Type"><constant>application/xml</constant></setHeader>
				            	</otherwise>  
				            </choice> 	            	 
		            </otherwise>
		</choice>
	</route>
    </camelContext>
</beans>