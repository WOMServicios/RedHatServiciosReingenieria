<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
    http://camel.apache.org/schema/spring 
    http://camel.apache.org/schema/spring/camel-spring.xsd">

	<import resource="bean-definitions.xml" />

	<camelContext
		xmlns="http://camel.apache.org/schema/spring">
		<!-- <propertyPlaceholder id="placeholder" -->
		<!-- location="classpath:application.properties,classpath:sql.properties" 
			/> -->
		<propertyPlaceholder id="placeholder"
			location="classpath:${env:APP_ENV}.properties, classpath:${env:SQL_ENV}.properties" />

		<!-- Control de errores -->
		<onException>
			<exception>java.lang.Exception</exception>
			<handled>
				<simple>true</simple>
			</handled>
			<to uri="velocity:velocity/response-sql-error.vm" />
			<setHeader headerName="Content-Type">
				<constant>application/json</constant>
			</setHeader>
		</onException>

		<route>
			<!-- TODO: Cambiar nombre del servicio por el propocionado por Arquitectura -->
			<from uri="jetty:{{camel.from.endpoint.route1}}" />
			<from uri="direct:fullRequest" />

			<bean ref="sqlFormatterProcessor"
				method="sqlParserAccountInformation"></bean>

			<choice>
				<when>
					<simple>${body} == null</simple>
					<to uri="velocity:velocity/response-sql-error.vm"></to>
				</when>
			</choice>

			<setHeader headerName="Content-Type">
				<constant>application/json</constant>
			</setHeader>
		</route>

		<route>
			<!-- TODO: Cambiar nombre del servicio por el propocionado por Arquitectura -->
			<from uri="jetty:{{camel.from.endpoint.route2}}" />

			<bean ref="sqlFormatterProcessor"
				method="sqlGetRutAccountManager"></bean>

			<setHeader headerName="rut">
				<simple>${body}</simple>
			</setHeader>
			<to uri="direct:fullRequest" />
		</route>

	</camelContext>
</beans>