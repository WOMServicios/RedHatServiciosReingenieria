<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
    http://camel.apache.org/schema/spring 
    http://camel.apache.org/schema/spring/camel-spring.xsd">

	<import resource="bean-definitions.xml" />

	<camelContext
		xmlns="http://camel.apache.org/schema/spring"
		xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
		xmlns:ns="http://ws.wom.cl/wom/neg/customerinformationmanagement/getaccountinformation/v/1">
		<!-- <propertyPlaceholder id="placeholder" -->
		<!-- location="classpath:application.properties,classpath:sql.properties" 
			/> -->
		<propertyPlaceholder id="placeholder"
			location="classpath:sql.properties ,file:${env:APP_ENV}" />
			

		<route>
			<!-- TODO: Cambiar nombre del servicio por el propocionado por Arquitectura -->
			<from uri="jetty:http://{{rest.account.host}}:{{rest.account.port}}{{rest.account.url}}"/>
			<from uri="direct:fullRequest" />
			
			<bean ref="sqlFormatterProcessor"
				method="sqlParserAccountInformation"></bean>
			
			<choice>
				<when>
					<simple>${body} == null</simple>
					<to uri="velocity:velocity/response-sql-error.vm"></to>
				</when>
			</choice>

			<setHeader headerName="Content-Type">
				<constant>application/json</constant>
			</setHeader>
		</route>
		
		<route>
			<!-- TODO: Cambiar nombre del servicio por el propocionado por Arquitectura -->
			<from uri="jetty:http://{{rest.subscriber.host}}:{{rest.subscriber.port}}{{rest.subscriber.url}}"/>
			
			<onException>
				<exception>java.lang.Exception</exception>
				<handled>
					<constant>true</constant>
				</handled>
				<log message="ERROR: ${exception.message}"></log>
				<setHeader headerName="codigoError">
					<simple>${exception.codigoError}</simple>
				</setHeader>
				<setHeader headerName="messageError">
					<simple>${exception.message.replaceAll('(\\r|\\n)','').replaceAll('\"','')}</simple></setHeader>


				<to uri="velocity:velocity/response-sql-error.vm" />
			</onException>		

			
			<choice>
				<when>
				<simple>${headers.resourceType} == "" || ${headers.resourceValue} == "" </simple>
				
				</when>
				
			</choice>
			<bean ref="sqlFormatterProcessor" method="sqlGetRutAccountManager"></bean>
				<to uri="velocity:velocity/response-sql-error.vm"></to>
			<setHeader headerName="rut"><simple>${body}</simple></setHeader>
			<to uri="direct:fullRequest" />
		</route>
		
		<route>
			<from uri="cxf:http://{{soap.account.host}}:{{soap.account.port}}{{soap.account.url}}?		
			wsdlURL=classpath:wsdl/accountinformation.wsdl&amp;
			serviceName={http://ws.wom.cl/wom/neg/customerinformationmanagement/getaccountinformation/v/1}accountinformation&amp;
			portName={http://ws.wom.cl/wom/neg/customerinformationmanagement/getaccountinformation/v/1}getaccountinformationSOAP&amp;
			dataFormat=MESSAGE" />
			
			<onException>
				<exception>java.lang.Exception</exception>
				<handled>
					<constant>true</constant>
				</handled>
				<log message="ERROR: ${exception.message}"></log>
				<setHeader headerName="codigoError">
					<simple>${exception.codigoError}</simple>
				</setHeader>
				<setHeader headerName="messageError">
					<simple>${exception.message.replaceAll('(\\r|\\n)','').replaceAll('\"','')}</simple></setHeader>

				<to uri="velocity:velocity/soap-fault.vm" />
			</onException>	
			
						
			<convertBodyTo type="org.w3c.dom.Document"></convertBodyTo>

			<setHeader headerName="rut">
				<xpath resultType="java.lang.String">/soapenv:Envelope/soapenv:Body/ns:account/rut/text()</xpath>
			</setHeader>
			<setHeader headerName="accountId">
				<xpath resultType="java.lang.String">/soapenv:Envelope/soapenv:Body/ns:account/accountId/text()</xpath>
			</setHeader>

			<setHeader headerName="resourceType">
				<xpath resultType="java.lang.String">/soapenv:Envelope/soapenv:Body/ns:subscriberResources/resourceType/text()
				</xpath>
			</setHeader>
			<setHeader headerName="resourceValue">
				<xpath resultType="java.lang.String">/soapenv:Envelope/soapenv:Body/ns:subscriberResources/resourceValue/text()
				</xpath>
			</setHeader>
			
			<choice>
				<when>
					<xpath>/soapenv:Envelope/soapenv:Body/ns:account</xpath>
						<choice>
							<when>
								<simple>${headers.rut} == "" and ${headers.accountId} == "" </simple>
								<throwException exceptionType="cl.wom.exception.services.ServiceError" message="400" />
							</when>
							<when>
								<simple>${headers.rut} != "" and ${headers.accountId} != "" </simple>
								<throwException exceptionType="cl.wom.exception.services.ServiceError" message="400" />
							</when>
							<otherwise>
								<bean ref="sqlFormatterProcessor" method="sqlParserAccountInformationSOAP"></bean>
								<when>
									<simple>${body} == null </simple>
									<throwException exceptionType="cl.wom.exception.services.ServiceError" message="453" />
								</when>
								<to uri="velocity:velocity/response-AccountImformation.vm" />
							</otherwise>
						</choice>	
					</when>
				<when>
					<xpath>/soapenv:Envelope/soapenv:Body/ns:subscriberResources</xpath>
					<choice>
						<when>
							<simple>${headers.resourceType} == "" and ${headers.resourceValue} == "" </simple>
							<throwException exceptionType="cl.wom.exception.services.ServiceError" message="400" />
						</when>
						<when>
							<simple>${headers.resourceType} != "" and ${headers.resourceValue} == ""</simple>
							<throwException exceptionType="cl.wom.exception.services.ServiceError" message="400" />
						</when>
						<when>
							<simple>${headers.resourceType} == "" and ${headers.resourceValue} != ""</simple>
							<throwException exceptionType="cl.wom.exception.services.ServiceError" message="400" />
						</when>
						<otherwise>
							<bean ref="sqlFormatterProcessor" method="sqlGetRutAccountManager"></bean>
							<setHeader headerName="rut"><simple>${body}</simple></setHeader>
							<bean ref="sqlFormatterProcessor" method="sqlParserAccountInformationSOAP"></bean>
							<to uri="velocity:velocity/response-suscriberResource.vm" />
						</otherwise>
					</choice>			
				</when>
			</choice>
		</route>
	</camelContext>
</beans>
