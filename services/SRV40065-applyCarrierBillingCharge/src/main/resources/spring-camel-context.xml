<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://camel.apache.org/schema/spring 
	http://camel.apache.org/schema/spring/camel-spring.xsd">

	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver" />
		<property name="url"
			value="jdbc:oracle:thin:@10.120.241.44:1540:BSCSUAT" />
		<property name="username" value="VMD" />
		<property name="password" value="VMD" />
	</bean>

	<!-- configure the Camel SQL component to use the JDBC data source -->
	<bean class="org.apache.camel.component.sql.SqlComponent" id="sql">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<camelContext
		id="camelContext-0423f187-258d-455e-82e8-783bcda7f4af"
		xmlns="http://camel.apache.org/schema/spring">
		<!--Cargamos el archivo de propiedades correspondiente al ambiente NOTA: 
			esto debe ser descomentado para subir a openshift, se debe eliminar el espacio 
			entre "$ {" y comentar o eliminar la linea donde se encuentra en duro el 
			archivo properties. Por defecto en opensfhit es develop -->
		<!--<propertyPlaceholder id="placeholder" location="classpath:$ {env:PFX_ENV}.properties"/> -->

		<propertyPlaceholder id="placeholder"
			location="classpath:application.properties,classpath:sql.properties" />


		<onException>
			<exception>cl.wom.exception.services.ServiceError</exception>
			<handled>
				<constant>true</constant>
			</handled>
			<log loggingLevel="ERROR" message="errorr" />
			<setHeader headerName="Exchange.HTTP_RESPONSE_CODE">
				<simple>${exception.codigoError}</simple>
			</setHeader>
			<setHeader headerName="messageError">
				<simple>Bad Request - ${exception.message}</simple>
			</setHeader>
			<to uri="velocity:velocity/400.vm" />
		</onException>

<!-- applycarrierbillingcharge -->
		<route streamCache="true">
			<from
				uri="restlet:http://0.0.0.0:8888/CarrierBilling/1.0.0/Bango/transaction/?restletMethod=post" />
			<setHeader headerName="Accept">
				<constant>application/json</constant>
			</setHeader>
			<setHeader headerName="Content-Type">
				<constant>application/json</constant>
			</setHeader>
			<setHeader headerName="requestId">
				<jsonpath>$.requestId</jsonpath>
			</setHeader>
			<setHeader headerName="bangoTransactionId">
				<jsonpath>$.bangoTransactionId</jsonpath>
			</setHeader>
			<setHeader headerName="merchantTransactionId">
				<jsonpath>$.merchantTransactionId</jsonpath>
			</setHeader>
			<setHeader headerName="paymentProviderTransactionId">
				<jsonpath>$.paymentProviderTransactionId</jsonpath>
			</setHeader>
			<setHeader headerName="userId">
				<jsonpath>$.userId</jsonpath>
			</setHeader>
			<setHeader headerName="amount">
				<jsonpath>$.amount</jsonpath>
			</setHeader>
			<setHeader headerName="currency">
				<jsonpath>$.currency</jsonpath>
			</setHeader>
			<choice>
				<when>
					<simple>
						${headers.requestId} == "" ||
						${headers.bangoTransactionId}
						== "" ||
						${headers.merchantTransactionId} == "" ||
						${headers.paymentProviderTransactionId} == "" ||
						${headers.userId}
						== "" ||
						${headers.amount} == "" ||
						${headers.currency} == ""
					</simple>
					<throwException
						exceptionType="cl.wom.exception.services.ServiceError"
						message="400" />
				</when>
				<otherwise>
					<to uri="velocity:velocity/200ApplyCarrierBillingCharge.vm" />
				</otherwise>
			</choice>
		</route>

	</camelContext>
</beans>
