<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
    http://camel.apache.org/schema/spring 
    http://camel.apache.org/schema/spring/camel-spring.xsd">


	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="${sql.wappldesa.url}" />
		<property name="username" value="${sql.wappldesa.username}" />
		<property name="password" value="${sql.wappldesa.password}" />
	</bean>
	<bean id="dSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="${sql.bscsdesa.url}" />
		<property name="username" value="${sql.bscsdesa.username}" />
		<property name="password" value="${sql.bscsdesa.password}" />
	</bean>

	<!-- configure the Camel SQL component to use the JDBC data source -->
	<bean class="org.apache.camel.component.sql.SqlComponent" id="sql">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<import resource="bean-definitions.xml" />
	
	<camelContext
		xmlns="http://camel.apache.org/schema/spring"
		xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
		xmlns:ns="http://ws.wom.cl/wom/neg/serviceordermanagement/activavolte/v/1">

		<propertyPlaceholder id="placeholder"
			location="classpath:application.properties" />
		<onException>
			<exception>cl.wom.middleware.proxy.ServiceError</exception>
			<handled>
				<constant>true</constant>
			</handled>
			<setHeader headerName="Exchange.HTTP_RESPONSE_CODE">
				<simple>${exception.codigoError}</simple>
			</setHeader>
			<setHeader headerName="codeError">
				<simple>${exception.codigoError}</simple>
			</setHeader>
			<setHeader headerName="messageError">
				<simple>${exception.message}</simple>
			</setHeader>
			<to uri="velocity:velocity/activateVoLTE_ERROR.vm" />
		</onException>

		<route streamCache="true">
			<from
				uri="cxf:http://0.0.0.0:8888/ocp/srv40049/activavolte/soap/v1.0/?		
			wsdlURL=classpath:wsdl/activateVoLTE.wsdl&amp;
			serviceName={http://ws.wom.cl/wom/neg/serviceordermanagement/activavolte/v/1}activateVoLTE&amp;
			portName={http://ws.wom.cl/wom/neg/serviceordermanagement/activavolte/v/1}activateVoLTESOAP&amp;
			dataFormat=MESSAGE" />
			<log message="BODY******** : ${body}"></log>
			<setHeader headerName="msisdn">
				<xpath resultType="java.lang.Long">/soapenv:Envelope/soapenv:Body/ns:activateVoLTE/param/msisdn/text()
				</xpath>
			</setHeader>
			<setHeader headerName="imsi">
				<xpath resultType="java.lang.Long">/soapenv:Envelope/soapenv:Body/ns:activateVoLTE/param/imsi/text()
				</xpath>
			</setHeader>
			<log message="HEADERS******** : ${headers}"></log>
			<log message="BODY******** : ${body}"></log>

			<log message="headers.msisdn: ${headers.msisdn}"></log>
			<log message="headers.imsi: ${headers.imsi}"></log>

			<choice>
				<when>
					<simple>${headers.msisdn} == "" || ${headers.imsi} == "" || ${headers.msisdn} == null || ${headers.imsi} == null </simple>
					<log message=" CAE EN LA VALIDACION"></log>
					<throwException
						exceptionType="cl.wom.middleware.proxy.ServiceError" message="400" />
				</when>
			</choice>

			<!-- Invocación al procedimiento de auditorio INICIO -->
			<to uri="direct:spg_new_request_pr"></to>

			<!--Invocación telnet					   -->	
<!-- 			EL PARAMETRO MSISDN YA VIENE CON EL PREFIJO "569"  -->
<!-- 			<setBody><simple>SPGCMD:AUTOPROV:MSISDN=569${headers.msisdn};</simple></setBody> -->
				<setBody><simple>SPGCMD:AUTOPROV:MSISDN=${headers.msisdn};</simple></setBody>

<!-- 		DESCOMENTAR Y REEMPLAZAR CUANDO SE VERIFIQUEN LA RUTA IP Y EL PUERTO -->
<!-- 			<to uri="netty4:tcp://10.120.241.42:8887" /> -->
			<toD uri="netty4:{{telnet.tcp}}" />
		
			<log message="retorno telnet RESP_CODE: ${body.split('=')[1]}"></log>
			<log message="retorno telnet RESP_MSG: ${body.split('=')[2]}"></log>
					
<!-- 			GENERAR LOS PARAMETROS DENTRO DE LA CABECERA -->
			<setHeader headerName="telnet_code">
				<simple >${body.split('=')[1]}</simple>
			</setHeader>
			<setHeader headerName="telnet_err_code">
				<simple >${headers.telnet_code.split(',')[0]}</simple>
			</setHeader>
			<log message="telnet code: ${headers.telnet_err_code}"></log>
			<setHeader headerName="telnet_err_msg">
				<simple >${body.split('=')[2]}</simple>
			</setHeader>
			<choice>
				<when>
					<simple>${headers.telnet_err_code} != 0 || ${headers.telnet_err_msg} != "SUCCESS"</simple>
					<when>
						<simple>${headers.telnet_err_code} == 1003 </simple>
						<to uri= "direct:spg_set_bscs_status_pr"></to>
						<log message="CAE EN LA SEGUNDA EXCEPCION"></log>
						<log message="valor en telnet code ${headers.telnet_err_code}"></log>
						<log message="valor en telnet msg ${headers.telnet_msg_code}"></log>
						<log message="Finalizando proceso con ERROR 1003 EN LA RESPUESTA TELNET"></log>		 	
						<throwException exceptionType="cl.wom.middleware.proxy.ServiceError" message="404" />	
					</when>	
					<otherwise>
						<setHeader headerName="new_request_cod_return">
								<simple>${headers.telnet_err_code}</simple>
						</setHeader>
						<setHeader headerName="new_request_msg_return">
								<simple>${headers.telnet_err_msg}</simple>
						</setHeader>
						<to uri= "direct:spg_set_bscs_status_pr"></to>
						<log message="CAE EN LA PENULTIMA EXCEPCION"></log>
						<throwException exceptionType="cl.wom.middleware.proxy.ServiceError" message="404" />
						<log message="Finalizando proceso con ERROR DE LA RESPUESTA TELNET"></log>		 			
					</otherwise>		
				</when>
			 </choice>
			 <!-- REGISTRAR ESTADO DEL TELNET CON EXITO -->
			 <to uri="direct:spg_set_prov_status_pr"></to>
			 <!-- REGISTRAR EN LA DB BSCS -->
			 <to uri="direct:spg_add_bscs_services_pr"></to>
			 <log message="pasando antes del parse code: ${headers.bscs_cod_services}  msg: ${headers.bscs_msg_services}"></log>
			 
			<!-- CHOICE PARA CASO DE ERROR -->

			 <to uri= "direct:spg_set_bscs_status_pr"></to>			
			<to uri="velocity:velocity/activateVoLTE_SUCCESS.vm" />
			<log message="Finalizando proceso con exito"></log>
		</route>

		<route>
			<from uri="direct:spg_new_request_pr" />
  				<to uri="sql-stored:SPG_PROVISIONING_REQUEST_PG.SPG_NEW_REQUEST_PR(DOUBLE ${headers.msisdn},DOUBLE ${headers.imsi},OUT INTEGER sn_cod_return,OUT VARCHAR sv_msg_return,OUT VARCHAR sn_spg_request_id )?dataSource=dataSource"/>

					<setHeader headerName="new_request_psg_request_id">
									<simple resultType="java.lang.Long">${body[sn_spg_request_id]}</simple>
					</setHeader>
					<log message="id return procedure1: ${headers.new_request_psg_request_id}"></log>
 					<setHeader headerName="new_request_cod_return">
									<simple resultType="java.lang.Integer">${body.[sn_cod_return]}</simple>
					</setHeader>
					<log message="cod return procedure1: ${headers.new_request_cod_return}"></log>
 					<setHeader headerName="new_request_msg_return">
									<simple resultType="java.lang.String">${body.[sv_msg_return]}</simple>
					</setHeader>
					<log message="msg return procedure1: ${headers.new_request_msg_return}"></log>
		</route>
		<route>
<!-- 			<from uri="netty4:tcp://10.120.241.42:8887"/> -->
			<from uri="netty4:{{telnet.tcp}}"/>

			<setBody><constant>SPGCMD:AUTOPROV:RESP_CODE=0,RESP_MSG=SUCCESS</constant></setBody>
		</route>	
		<route>
			<from uri="direct:spg_set_bscs_status_pr" />
			  		<to uri="sql-stored:SPG_PROVISIONING_REQUEST_PG.SPG_SET_BSCS_STATUS_PR(DOUBLE ${headers.new_request_psg_request_id},INTEGER ${headers.new_request_cod_return},VARCHAR ${headers.new_request_msg_return},OUT INTEGER bscs_cod_status,OUT VARCHAR bscs_msg_status)?dataSource=dataSource"/>
				
				<!-- TODO: cambiar los headers ACA!!! -->
 					<setHeader headerName="bscs_cod_status">
									<simple resultType="java.lang.Integer">${body.[bscs_cod_status]}</simple>
					</setHeader>
					<log message="cod return procedure2: ${headers.bscs_cod_status}"></log>
 					<setHeader headerName="bscs_msg_status">
									<simple resultType="java.lang.String">${body.[bscs_msg_status]}</simple>
					</setHeader>
					<log message="msg return procedure2: ${headers.bscs_msg_status}"></log>						
		</route>
		<route>
			<from uri="direct:spg_set_prov_status_pr"/>
					<to uri="sql-stored:SPG_PROVISIONING_REQUEST_PG.SPG_SET_PROV_STATUS_PR(DOUBLE ${headers.new_request_psg_request_id},INTEGER ${headers.telnet_err_code},VARCHAR ${headers.telnet_err_msg},OUT INTEGER prov_cod_status,OUT VARCHAR prov_msg_status)?dataSource=dataSource"/>
				
				<!-- TODO: cambiar los headers ACA!!! -->
 					<setHeader headerName="prov_cod_status">
									<simple resultType="java.lang.Integer">${body.[prov_cod_status]}</simple>
					</setHeader>
					<log message="cod return procedure3: ${headers.prov_cod_status}"></log>
 					<setHeader headerName="prov_msg_status">
									<simple resultType="java.lang.String">${body.[prov_msg_status]}</simple>
					</setHeader>
					<log message="msg return procedure3: ${headers.prov_msg_status}"></log>		
		</route>	
		<route>
			<from uri="direct:spg_add_bscs_services_pr" />
					<to uri="sql-stored:SPG_SERVICE_ACTIVATION_PG.SPG_ADD_BSCS_SERVICES_PR(INTEGER ${headers.msisdn},OUT INTEGER bscs_cod_services,OUT VARCHAR bscs_msg_services)?dataSource=dSource"/>
				
<!-- 				TODO: cambiar los headers ACA!!! -->
 					<setHeader headerName="bscs_cod_services">
						<simple resultType="java.lang.Integer">${body.[bscs_cod_services]}</simple>
					</setHeader>
					<log message="cod return procedure4: ${headers.bscs_cod_services}"></log>
 					<setHeader headerName="bscs_msg_services">
									<simple resultType="java.lang.String">${body.[bscs_msg_services]}</simple>
					</setHeader>
					<log message="msg return procedure4: ${headers.bscs_msg_services}"></log>
		</route>
		
	</camelContext>
</beans>
