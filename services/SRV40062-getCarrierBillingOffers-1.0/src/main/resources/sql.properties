sql.getInfoSuscriptorCarrierBilling = SELECT customer_all.cscomptaxno AS rut, customer_all.customer_id, nvl(customer_all.CUSTOMER_ID_HIGH,customer_all.customer_id)  as CUSTOMER_ID_HIGH, contract_all.co_id AS contract_id, directory_number.dn_num AS num_celular, DECODE( rateplan_to_rateplan_type.rateplan_type_id , '1','Postpaid','2','Control', '4','Postpaid','3','Prepaid' , '6','Prepaid' , '5', 'Control','Postpaid' ) AS tipo_contrato, rateplan.shdes AS ratePlan, ROUND(ROUND(sysdate - contract_all.CO_ACTIVATED)/30) AS antiguedad, billcycle_actual_view.billcycle AS ciclo, contract_all.ch_status AS estado_contrato, contract_all.co_activated AS fecha_activacion, decode(sign(instr(rateplan.des,'Empresa')),1,'Empresa',decode(sign(instr(rateplan.des,'Business')),1,'Empresa','Persona')) AS MERCADO, sum(ROUND(mpulktmb.accessfee*1.19,0)) as cargo_basico FROM directory_number, contr_services_cap, contract_all, ccontact_all, contr_devices, sysadm.rateplan, rateplan_to_rateplan_type, customer_all, billcycle_definition,  billcycle_actual_view, reasonstatus_all, contract_history, mpulktmb, mpusntab, mpusptab WHERE directory_number.dn_id = contr_services_cap.dn_id AND directory_number.dn_num = '${headers.msisdn}' AND contr_services_cap.co_id = contract_all.co_id AND contract_all.customer_id = ccontact_all.customer_id AND contr_devices.co_id = contract_all.co_id AND CONTRACT_HISTORY.co_id = contract_all.co_id AND CONTRACT_HISTORY.CH_REASON= REASONSTATUS_ALL.RS_ID AND CONTRACT_HISTORY.ch_seqno = (select max(x.ch_seqno) from CONTRACT_HISTORY x where x.co_id = CONTRACT_HISTORY.co_id) AND contract_all.tmcode = rateplan.TMCODE AND rateplan.tmcode = rateplan_to_rateplan_type.tmcode AND mpulktmb.tmcode = rateplan.tmcode AND mpulktmb.sncode = mpusntab.sncode AND mpulktmb.spcode = mpusptab.spcode AND mpulktmb.csind='X' AND mpulktmb.sncode in (3,551) AND contract_all.customer_id = customer_all.customer_id AND ccontact_all.customer_id = customer_all.customer_id AND billcycle_actual_view.customer_id = customer_all.customer_id AND billcycle_actual_view.billcycle = BILLCYCLE_DEFINITION.billcycle AND contr_services_cap.sncode = 3 AND ccontact_all.ccbill = 'X' AND REASONSTATUS_ALL.REASON_SCOPE = 'C' AND contr_services_cap.cs_deactiv_date IS NULL AND contr_devices.cd_deactiv_date IS NULL GROUP BY customer_all.cscomptaxno, BILLCYCLE_DEFINITION.LAST_RUN_DATE, BILLCYCLE_DEFINITION.BCH_RUN_DATE-1 , customer_all.customer_id, customer_all.CUSTOMER_ID_HIGH, contract_all.co_id, directory_number.dn_num, DECODE( rateplan_to_rateplan_type.rateplan_type_id , '1','Postpaid','2','Control', '4','Postpaid','3','Prepaid' , '6','Prepaid' , '5', 'Control','Postpaid' ), customer_all.custcode, rateplan.tmcode, ROUND(ROUND(sysdate - contract_all.CO_ACTIVATED)/30), billcycle_actual_view.billcycle, rateplan.shdes, contract_all.ch_status, contract_all.co_activated, rateplan.des, decode(sign(instr(rateplan.des,'Empresa')),1,'Empresa',decode(sign(instr(rateplan.des,'Business')),1,'Empresa','Persona'))
sql.getCustomerContractMoreOld = SELECT a.dn_num FROM sysadm.directory_number a, sysadm.contr_services_cap b, sysadm.contract_all c, sysadm.rateplan d WHERE c.customer_id = ${property.customerIdProperty} AND a.dn_id = b.dn_id AND b.sncode = 3 AND b.co_id = c.co_id AND b.cs_deactiv_date IS NULL AND c.tmcode = d.tmcode AND c.CO_ACTIVATED = (select min(x.CO_ACTIVATED) from contract_all  x where x.customer_id = c.customer_id)
#sql.getofertacarrier= SELECT ID_OFERTA,DES_OFERTA,ID_OCC_BSCS, MESES_ANTIGUEDAD,VALOR_MINIMO_PLAN, FEC_DESDE, FEC_HASTA FROM OFFER_CARRIER_BILLING_TO WHERE MESES_ANTIGUEDAD <= ${property.antiguedadProperty} AND VALOR_MINIMO_PLAN <= ${property.cargoBasicoProperty}
sql.getCustomerPagador=SELECT customer_id FROM sysadm.customer_all a WHERE a.cslevel = (SELECT MAX (x.cslevel) FROM sysadm.customer_all x WHERE x.paymntresp = 'X' START WITH x.customer_id = ${property.customerIdHighProperty} CONNECT BY PRIOR x.customer_id_high = x.customer_id) START WITH a.customer_id = ${property.customerIdHighProperty} CONNECT BY PRIOR a.customer_id_high = a.customer_id
#sql.getSuscripcionesCarrierExist=SELECT COUNT(1) as contador FROM CONT_OFFER_CARRIER_BILLING_TO WHERE num_celular = '${property.numCelularProperty}'
sql.getSuscripcionesCarrierExist=SELECT COUNT(1) as contador FROM CARRIERBILLING.CONT_OFFER_CARRIER_BILLING_TO WHERE num_celular = '${property.numCelularProperty}' And estado_oferta <> 2
sql.getofertacarrier=SELECT ID_OFERTA,DES_OFERTA,ID_OCC_BSCS, MESES_ANTIGUEDAD,VALOR_MINIMO_PLAN, FEC_DESDE, FEC_HASTA FROM CARRIERBILLING.OFFER_CARRIER_BILLING_TO WHERE MESES_ANTIGUEDAD <= ${property.antiguedadProperty} AND VALOR_MINIMO_PLAN <= ${property.cargoBasicoProperty}
sql.insertaregelegcarrierbilling = INSERT INTO CARRIERBILLING.CONT_OFFER_CARRIER_BILLING_TO (ID_OFERTA,CUSTOMER_ID,NUM_CELULAR,CONTRATO_ID,RATEPLAN,ANTIGUEDAD,CARGO_BASICO,ESTADO_OFERTA) VALUES ('${property.idOfertaProperty}', '${property.customerIdProperty}', '${property.numCelularProperty}', ${property.contractIdProperty}, '${property.ratePlanProperty}', ${property.antiguedadProperty}, ${property.cargoBasicoProperty}, 2)
sql.validacionpreinsert=SELECT COUNT(*) FROM CARRIERBILLING.CONT_OFFER_CARRIER_BILLING_TO WHERE ID_OFERTA ='${property.idOfertaProperty}' AND CUSTOMER_ID=${property.customerIdProperty}