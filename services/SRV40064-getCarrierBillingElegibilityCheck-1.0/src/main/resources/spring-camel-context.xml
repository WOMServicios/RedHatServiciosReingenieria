<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://camel.apache.org/schema/spring 
	http://camel.apache.org/schema/spring/camel-spring.xsd">


	<bean id="clienteProcessor" class="cl.wom.util.ClienteProcessor"></bean>
	<camelContext
		id="camelContext-0423f187-258d-455e-82e8-783bcda7f4af"
		xmlns="http://camel.apache.org/schema/spring">

		<!-- <propertyPlaceholder id="placeholder"
			location="classpath:application.properties,classpath:sql.properties" />
 -->
<propertyPlaceholder id="placeholder"
                location="classpath:${env:APP_ENV}.properties, classpath:${env:SQL_ENV}.properties"/>
		<onException>
			<exception>cl.wom.exception.services.ServiceError</exception>
			<handled>
				<constant>true</constant>
			</handled>
			<log message="ERROR: ${exception.message}"></log>
			<setHeader headerName="Exchange.HTTP_RESPONSE_CODE">
				<simple>${exception.codigoError}</simple>
			</setHeader>
			<setHeader headerName="codigoError">
				<simple>${exception.codigoError}</simple>
			</setHeader>
			<setHeader headerName="messageError">
				<simple>${exception.message}</simple>
			</setHeader>
			<setHeader headerName="Content-Type">
				<constant>application/json</constant>
			</setHeader>
			<to uri="velocity:velocity/ErrorHttp.vm" />

		</onException>

		<!-- getcarrierbillingelegibilitycheck -->
		<route streamCache="true">
			<from
		
				uri="restlet:http://{{service.rest.host}}:{{service.rest.port}}{{service.rest.resource}}?restletMethod=post" />
			<doTry>

				<setHeader headerName="requestId">
					<jsonpath>$.requestId</jsonpath>
				</setHeader>
				<setProperty propertyName="userIdProperty">
					<jsonpath>$.userId</jsonpath>
				</setProperty>
				<setHeader headerName="userIdType">
					<jsonpath>$.userIdType</jsonpath>
				</setHeader>
				<setHeader headerName="key1">
					<jsonpath>$.extensionData.key1</jsonpath>
				</setHeader>
				<setHeader headerName="key2">
					<jsonpath>$.extensionData.key2</jsonpath>
				</setHeader>
				<doCatch>
				<exception>org.apache.camel.ExpressionEvaluationException
					</exception>
					<setHeader headerName="Exchange.HTTP_RESPONSE_CODE">
						<simple>422</simple>
					</setHeader>
					<to uri="velocity:velocity/422.vm" />
					<setHeader headerName="Content-Type">
						<constant>application/json</constant>
					</setHeader>
					<stop />
				</doCatch>
			</doTry>

			<choice>
				<when>
					<simple>
						${headers.requestId} == "" ||
						${property.userIdProperty} ==
						"" ||
						${headers.userIdType} == "" ||
						${headers.key1} == "" ||
						${headers.key2} == ""
					</simple>
					<throwException
						exceptionType="cl.wom.exception.services.ServiceError"
						message="400" />
				</when>
				<otherwise>

					<!-- seteo variable global a ocupar para validaciones -->
					<!-- <setProperty propertyName="userIdProperty"> <simple>${headers.userId}</simple> 
						</setProperty> <setHeader headerName="msisdn"> <simple>${property.userIdProperty}</simple> 
						</setHeader> -->

					<setBody>
						<simple>{{sql.getrespuestaeligibilidad}}</simple>
					</setBody>
					<setHeader headerName="interface">
						<constant>getrespuestaeligibilidad</constant>
					</setHeader>

					<to uri="bean:clienteProcessor" />



					<!-- devuelve diferente de cero sale con exito -->
					<when>
						<!-- <simple>${property.countProperty} != 0</simple> cambiar -->
						<simple>${property.countProperty} != 0</simple>
						<setBody>
							<simple>{{sql.paymentTransactionId}}</simple>
						</setBody>

						<setHeader headerName="interface">
							<constant>paymentTransactionId</constant>
						</setHeader>

						<to uri="bean:clienteProcessor" />

						<to
							uri="velocity:velocity/200GetCarrierBillingElegibilityCheck.vm" />

					</when>
					<!-- devuelve cero empiezan las validaciones -->
					<when>
						<!-- <simple>${property.countProperty} == 0</simple> cambiar -->
						<simple>${property.countProperty} == 0</simple>
						<log message="${property.userIdProperty} vamos" />
						<setBody>
							<simple>{{sql.getInfoSuscriptorCarrierBilling}}</simple>
						</setBody>

						<setHeader headerName="interface">
							<constant>getInfoSuscriptorCarrierBilling</constant>
						</setHeader>

						<to uri="bean:clienteProcessor" />

						<!-- query devolvera 0 / 1 si es cero se saldra getSuscripcionesCarrierExist -->

						<setBody>
							<simple>{{sql.getSuscripcionesCarrierExist}}</simple>
						</setBody>
						<setHeader headerName="interface">
							<constant>getSuscripcionesCarrierExist</constant>
						</setHeader>
						<to uri="bean:clienteProcessor" />
						<when>
							<!-- <simple>${body} != 0</simple> cambiar -->
							<simple>${body} == 0 </simple>
							<log message="llegue a exit"></log>
							<to uri="velocity:velocity/getSuscripcionesCarrierExist.vm" />
							<stop></stop>
						</when>
						<when>
							<!-- <simple>${body.contador} == 0</simple> cambiar -->
							<simple>${body} != 0</simple>
							<!-- getCustomerContractMoreOld para ver si el cliente posee una subcripion 
								activa -busca el msisdn mas antiguo de la cuenta -->

							<setBody>
								<simple>{{sql.getCustomerContractMoreOld}}</simple>
							</setBody>
							<setHeader headerName="interface">
								<constant>getCustomerContractMoreOld</constant>
							</setHeader>

							<to uri="bean:clienteProcessor" />


							<setProperty propertyName="dnNumIdHighProperty">
								<simple>${body}</simple>
							</setProperty>

							<when>
								<simple>${body} == null</simple>
								<to uri="velocity:velocity/getCustomerContractMoreOld.vm" />
								<stop />
							</when>

							<when>
								<simple>${body} != null</simple>

								<!-- valida la cuenta pagadora getCustomerPagador -->


								<setBody>
									<simple>{{sql.getCustomerPagador}}</simple>
								</setBody>

								<setHeader headerName="interface">
									<constant>getCustomerPagador</constant>
								</setHeader>

								<to uri="bean:clienteProcessor" />
								<when>
									<simple>${body} == null</simple>
									<to uri="velocity:velocity/getCustomerPagador.vm" />
									<stop />
								</when>
								<when>
									<simple>${body} != null</simple>
									<setBody>
										<simple>{{sql.paymentTransactionId}}</simple>
									</setBody>

									<setHeader headerName="interface">
										<constant>paymentTransactionId</constant>
									</setHeader>

									<to uri="bean:clienteProcessor" />

									<to
										uri="velocity:velocity/200GetCarrierBillingElegibilityCheck.vm" />
								</when>

							</when>
						</when>

					</when>
				</otherwise>
			</choice>
				<setHeader headerName="Content-Type">
				<constant>application/json; charset=UTF-8</constant>
			</setHeader>
			<setHeader headerName="Encoding">
				<constant>UTF-8</constant>
			</setHeader>
		</route>
	</camelContext>
</beans>
