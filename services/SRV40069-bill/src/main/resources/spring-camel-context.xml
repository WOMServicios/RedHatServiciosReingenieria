<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://camel.apache.org/schema/spring
    http://camel.apache.org/schema/spring/camel-spring.xsd">

    <import resource="bean-definitions.xml"/>

    <camelContext  xmlns="http://camel.apache.org/schema/spring">
        <propertyPlaceholder id="placeholder" location="classpath:application.properties"/>
        
        <!-- Control de errores -->
		<onException>
			    <exception>java.lang.Exception</exception>
			    <handled><simple>true</simple></handled>
			    <to uri="velocity:velocity/response-mongo-error.vm"/>
			    <setHeader headerName="Content-Type"><constant>application/json</constant></setHeader>
		</onException>

        <route streamCache="true">
            <from uri="jetty:{{camel.from.endpoint}}"/>
            <choice>
                <when>
                        <simple>${headers.bill.accountId} != null</simple>
                        <setHeader headerName="accountId"><simple>${headers.bill.accountId}</simple></setHeader>
                        <setHeader headerName="quantity"><simple>${headers.bill.quantity}</simple></setHeader>
                        <to uri="velocity:velocity/request-mongo-bill.vm" ></to>
                </when>
            </choice>
            <convertBodyTo type="java.lang.String"></convertBodyTo>
            <log message="Request Mongo: ${body}" />    
            <to uri="mongodb:mongoBean?database={{camel.mongodb.db}}&amp;collection=bill&amp;operation=findOneByQuery" />
			<log message="Response Mongo: ${body}" /> 
			
			<!-- En caso de no encontrar datos en la respuesta -->
            <choice>
                <when>
	                <simple>${body} == null</simple>
	                <to uri="velocity:velocity/response-mongo-nodata.vm" ></to>
                </when>
            </choice>

            <setHeader headerName="Content-Type"><constant>application/json</constant></setHeader>
        </route>

    </camelContext>
</beans>
